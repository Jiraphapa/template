========
Compilation & Usage
========

With Numba's Ahead-of-Time (AOT) compilation, the name of extension module is declared as follows:

.. code-block:: python

	from numba.pycc import CC

	cc = CC('module_name')

If the Python script is run and ``cc.compile()`` is called, it will generate an extension module named ``module_name``. Depending on platform, the actual filename may be ``module_name.so``, ``module_name.pyd``, ``module_name.cpython-34m.so``, etc. It is important to note that the compiled modules are only compatible with the identical platform that the modules used to compile.

To import the compiled module, make sure to add the ``module_name.so`` (the .so files are generated by running Numba Python script) file to your PYTHONPATH before import:

.. code-block:: python

	import module_name

To invoke the functions, simply call:

.. code-block:: python

	import module_name.function_name_as_declared_in_signature

For example, to call ``calc_splines`` function in the module ``calc_splines_numba``:

.. code-block:: python
	:emphasize-lines: 7

	import calc_splines_numba
	import numpy as np 

	path = np.ones((15,2))
	el_lengths = np.ones((14))

	calc_splines_numba.calc_splines(path, el_lengths, None, None, None)

